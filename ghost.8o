#----------------------------#
#  ghost
#  author: jackie kircher
#----------------------------#

#-- sprites --#

  # human
  : human
    0x00 0xE0 0xE0 0x40 0x40 0xE0 0xA0 0xA0

  # ghost
  : ghost
    0xF8 0xA8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostlo
    0x00 0xF8 0xA8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70
  : ghostright
    0xF8 0xE8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostrightlo
    0x00 0xF8 0xE8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70
  : ghostleft
    0xF8 0xB8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostleftlo
    0x00 0xF8 0xB8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70
  : ghostup
    0xF8 0xF8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostuplo
    0x00 0xF8 0xF8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70

  # graves
  : grave0
    0x00 0x60 0x60 0x60 0x00 0x00 0x00 0x00 0x00 0x00
  : grave1
    0x40 0xA0 0xA0 0xE0 0x00 0x00 0x00 0x00 0x00 0x00
  : grave2
    0x40 0xE0 0x40 0x40 0x00 0x00 0x00 0x00 0x00 0x00
  : grave3
    0x00 0x60 0xF0 0x90 0x00 0x00 0x00 0x00 0x00 0x00
  : graveopen
    0x00 0x00 0x40 0xE0 0x00 0xA0 0x00 0xA0 0x00 0xA0

  # borders
  : border-left
    0x00 0x80 0x40 0x80 0x00 0x00 0x80 0x40 0x80 0x00 0x00 0x80 0x40 0x80 0x00
  : border-right
    0x00 0x01 0x02 0x01 0x00 0x00 0x01 0x02 0x01 0x00 0x00 0x01 0x02 0x01 0x00
  : border-top
    0xA5 0x42
  : border-bottom
    0x42 0xA5
  : gate-left
    0x00 0x7A 0x4A
    #0x0A 0x7B 0x40
  : gate-right
    0x00 0x5E 0x52
    # 0x50 0xDE 0x02

#-- setup --#

  # humans
  :alias humanx v5
  :alias humany v6
  :alias scared v7
  : human-map-pos 0 0

  :const UP 1
  :const DN 2
  :const LF 3
  :const RT 4

  # ghost
  :alias ghostx     va
  :alias ghosty     vb
  :alias ghostframe vc
  :alias ghostpos   vd

  :const HI  0
  :const LO 10

  # map
  :alias map_xpos   v8
  :alias map_ypos   v9

  : tmp 0 0

#-- ghost drawing --#

: idletimer
  0

: make-ghost
  ghostx     := 12 # starting x position
  ghosty     :=  4 # starting y position
  ghostframe :=  0 # starting frame
  ghostpos   := HI # bounce direction
;

: draw-ghost
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10
;

: move-ghost
  v1 := ghostx
  v2 := ghosty
  v3 := ghostframe

  v0 := 7
  if v0 key then v1 += -2
  v0 := 9
  if v0 key then v1 +=  2
  v0 := 5
  if v0 key then v2 += -1
  v0 := 8
  if v0 key then v2 +=  1

  # return early and don't change anything if no
  # direction keys are being pressed
  v0 := 0
  if v1 != ghostx then v0 := 1
  if v2 != ghosty then v0 := 1
  if v0 == 0 then return

  # boundary checking y
  v4 := 1
  if map_ypos !=  0 then v4 := 0
  if v2       !=  1 then v4 := 0
  if v4       ==  1 then v2 := 2

  v4 := 1
  if map_ypos != 16 then v4 := 0
  if v2       != 21 then v4 := 0
  if v4       ==  1 then v2 := 20

  # boundary checking x
  # boundaries are only applied if on the edge of the map
  v4 := 1
  if map_xpos !=  0 then v4 := 0
  if v1       !=  0 then v4 := 0
  if v4       ==  1 then v1 := 2
  v4 := 1
  if map_xpos !=  8 then v4 := 0
  if v1       != 58 then v4 := 0
  if v4       ==  1 then v1 := 56

  # update frame offset so ghost turns
  v0 := 0
  if v1 > ghostx then v0 := 20
  if v1 < ghostx then v0 := 40
  if v2 < ghosty then v0 := 60
  v0 += ghostpos

  # erase old ghost position
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10

  # draw new ghost position
  i := ghost
  i += v0
  sprite v1 v2 10

  # update ghost values
  # (do this here so there is minimal flicker)
  ghostx     := v1
  ghosty     := v2
  ghostframe := v0
;

: bounce-ghost
  v0 := ghostpos
  v1 := ghostframe
  if v0 == HI then ghostframe +=  10
  if v0 == HI then ghostpos   :=  LO
  if v0 == LO then ghostframe += -10
  if v0 == LO then ghostpos   :=  HI

  i := ghost
  i += v1
  sprite ghostx ghosty 10
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10
;

: haunt
  # remove current ghost
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10

  v0 := 160
  i  := ghost
  loop
    i += v0
    sprite ghostx ghosty 10

    v0 += 10
    if v0 != 100 then
  again

  clear
  draw-background
  draw-ghost

  # don't scare the human if they're not on this screen
  i := human-map-pos
  load v1
  if map_xpos != v0 then return
  if map_ypos != v1 then return

  v0 := ghostx # ghost centerx
  v0 += 3
  v1 := humanx # human centerx
  v1 += 2

  v2 := 0 # direction to move horizontally
  if v0 == v1 then v2 := 0
  if v0 == v1 then v3 := v0
  # x is positive if ghost is right
  if v0 >  v1 then v2 := LF
  if v0 >  v1 then v3 := v0
  if v0 >  v1 then v3 -= v1
  # x is negative if ghost is left
  if v0 <  v1 then v2 := RT
  if v0 <  v1 then v3 := v1
  if v0 <  v1 then v3 -= v0

  v0 := v3
  v1 := v2
  i  := tmp
  save v1


  v2 := ghosty # ghost centery
  v2 += 4
  v3 := humany # human centery
  v3 += 3

  v4 := 0 # direction to move vertically
  if v2 == v3 then v4 := 0
  if v2 == v3 then v0 := v2
  # y is positive if ghost is below
  if v2 >  v3 then v4 := UP
  if v2 >  v3 then v0 := v2
  if v2 >  v3 then v0 -= v3
  # y is negative if ghost is above
  if v2 <  v3 then v4 := DN
  if v2 <  v3 then v0 := v3
  if v2 <  v3 then v0 -= v2

  v2 := v0
  v3 := v4

  i  := tmp
  load v1

  scared := 0
  if v2 >= v0 then scared := v3
  if v2 <  v0 then scared := v1

  # if no direction then scare randomly
  v0 := scared
  if v0 == 0 then scared := random 0b11
  if v0 == 0 then scared += 1


  draw-human
;

#-- humans --#

: map-human
  0 0

: make-human
  humanx := 31
  humany := 15
  scared :=  0

  v0 := 0
  v1 := 0
  i  := human-map-pos
  save v1
;

: draw-human
  # don't draw human if they aren't on the current screen
  i := human-map-pos
  load v1
  if map_xpos != v0 then return
  if map_ypos != v1 then return

  i := human
  sprite humanx humany 8

  if scared != 0 then run-human-run
;

: run-human-run
  loop
    v1 := humanx
    v2 := humany
    if scared == UP then v2 += -1
    if scared == DN then v2 +=  1
    if scared == LF then v1 += -1
    if scared == RT then v1 +=  1

    i := human
    sprite humanx humany 8 # erase current human
    sprite v1 v2 8         # draw new position

    if vf == 0 then humanx := v1
    if vf == 0 then humany := v2
    if vf == 1 then human-turn

    # check to see if they're at the edge of the screen
    v0 := 0
    if humanx ==  0 then v0 := 1
    if humanx == 61 then v0 := 1
    if humany ==  0 then v0 := 1
    if humany == 24 then v0 := 1
    if v0 == 0 then
  again

  # "run off-screen"
  sprite humanx humany 8

  # update global map coordinates
  i := human-map-pos
  load v1
  if humanx ==  0 then v0 +=  -8
  if humanx == 61 then v0 +=   8
  if humany ==  0 then v1 += -16
  if humany == 24 then v1 +=  16
  i := human-map-pos
  save v1

  # set the new screen position
  v0 := random 0b110000
  v0 += 16
  if v0 == 64 then v0 += 32 # don't spawn to the far left

  humanx := v0
  v0 := random 0b1111
  v0 += 4
  humany := v0

  # calm down
  scared := 0
;

: human-turn
  v3 := random 0b1
  v3 += 3          # left or right
  v4 := random 0b1
  v4 += 1          # up or down

  v0 := scared
  if v0 == UP then scared := v3
  if v0 == LF then scared := v4
  if v0 == DN then scared := v3
  if v0 == RT then scared := v4

  i := human
  sprite v1 v2 8         # erase collision
  sprite humanx humany 8 # draw in old position
;

: reset-human
  make-human
  clear
  draw-background
  draw-ghost
  draw-human
;

#-- background --#

# map

: map
  0 0 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 # end row 1
  0 0 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 # end row 2

# graves
: grave-table
  i := grave0    return
  i := grave1    return
  i := grave2    return
  i := grave3    return
  i := graveopen return
;

: select-grave
  jump0 grave-table
;

: draw-grave
  i := map
  i += v4
  i += map_xpos
  i += map_ypos
  load v0

  v0 <<= v0 # shift left because grave-table lines are 4 bytes each
  v0 <<= v0
  select-grave

  sprite v3 v2 10
;

: make-background

  v1 := 0
  loop
    if v1 != 0 then v3 := random 0b111
    if v1 == 0 then v3 := -1

    # inner loop is to create each screen
    # each screen (except for the generation screen) needs
    # to have exactly one open grave
    v2 := 0
    loop
      v0 := random 0b11
      if v2 == v3 then v0 := 4

      i  := map
      i  += v1
      i  += v2
      save v0

      v2 += 1
      if v2 != 8 then
    again

    v1 += 8
    if v1 != 32 then
  again
;

: draw-background
  v2 := 10
  if map_ypos == 16 then v2 := 6
  v3 := 7

  if map_xpos ==  0 then draw-border-left
  if map_xpos ==  8 then draw-border-right
  if map_ypos ==  0 then draw-border-top
  if map_ypos == 16 then draw-border-bottom

  v4 := 0
  loop
    draw-grave

    v3 += 16
    if v4 ==  3 then v2 += 11

    v4 +=  1
    if v4 != 8 then
  again
;

: draw-border-left
  v0 := 1
  i  := border-left
  loop
    v1 := 0
    sprite v1 v0 15

    v0 += 15
    if v0 != 31 then
  again
;

: draw-border-right
  v0 := 1
  i  := border-right
  loop
    v1 := 56
    sprite v1 v0 15

    v0 += 15
    if v0 != 31 then
  again
;

: draw-border-top
  v0 := 3
  i  := border-top
  loop
    v1 := 0
    sprite v0 v1 2

    v0 += 10
    if v0 != 63 then
  again

  if map_xpos == 0 then draw-gate
;

: draw-border-bottom
  v0 := 3
  i  := border-bottom
  loop
    v1 := 30
    sprite v0 v1 2

    v0 += 10
    if v0 != 63 then
  again
;

: draw-gate
  v0 := 24
  v1 := 0

  i := gate-left
  sprite v0 v1 3
  v0 += 8
  i := gate-right
  sprite v0 v1 3
;

: new-screen-right
  map_xpos   +=  8
  ghostx     :=  0
  ghostframe := 20
  ghostpos   := HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: new-screen-left
  map_xpos   += -8
  ghostx     := 58
  ghostframe := 40
  ghostpos   := HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: new-screen-up
  map_ypos   += -16
  ghosty     :=  22
  ghostframe :=  60
  ghostpos   :=  HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: new-screen-down
  map_ypos   += 16
  ghosty     :=  0
  ghostframe :=  0
  ghostpos   := HI
  clear
  draw-background
  draw-human
  draw-ghost
;


#-- main --#

: main

  v7 := 0 # user v7 for idle timer
  map_xpos := 0
  map_ypos := 0
  make-ghost
  draw-ghost

  make-human
  draw-human

  make-background
  draw-background

  loop
    move-ghost

    v0 := 6
    if v0 key then haunt

    v0 := 1
    if v0 key then reset-human

    # wrap around effect
    if ghostx == 60 then new-screen-right
    if ghostx == -2 then new-screen-left
    if ghosty == -1 then new-screen-up
    if ghosty == 23 then new-screen-down

    # idle the ghost
    v1 := 20
    i  := idletimer
    load v0
    v0 += v1
    v2 := vf
    i  := idletimer
    save v0
    if v2 == 1 then bounce-ghost
  again

