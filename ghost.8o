#----------------------------#
#  ghost
#  author: jackie kircher
#----------------------------#


#-- sprites --#

  # human
  : human
    0xE0 0xE0 0x40 0x40 0xE0 0xA0 0xA0

  # ghost
  : ghost
    0xF8 0xA8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostlo
    0x00 0xF8 0xA8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70
  : ghostright
    0xF8 0xE8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostrightlo
    0x00 0xF8 0xE8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70
  : ghostleft
    0xF8 0xB8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostleftlo
    0x00 0xF8 0xB8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70
  : ghostup
    0xF8 0xF8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x00 0x20
  : ghostuplo
    0x00 0xF8 0xF8 0xF8 0xF8 0xF8 0xA8 0x00 0x00 0x70

  # graves
  : grave0
    0x00 0x60 0x60 0x60 0x00 0x00 0x00 0x00 0x00 0x00
  : grave1
    0x40 0xA0 0xA0 0xE0 0x00 0x00 0x00 0x00 0x00 0x00
  : grave2
    0x40 0xE0 0x40 0x40 0x00 0x00 0x00 0x00 0x00 0x00
  : grave3
    0x00 0x60 0xF0 0x90 0x00 0x00 0x00 0x00 0x00 0x00
  : graveopen
    0x00 0x60 0xF0 0x90 0x00 0x90 0x00 0x90 0x00 0x90
  : graveclosed
    0x00 0x60 0xF0 0x90 0x00 0xF0 0x60 0xF0 0x60 0xF0

  # borders
  : border-left
    0x00 0x80 0x40 0x80 0x00 0x00 0x80 0x40 0x80 0x00 0x00 0x80 0x40 0x80 0x00
  : border-right
    0x00 0x01 0x02 0x01 0x00 0x00 0x01 0x02 0x01 0x00 0x00 0x01 0x02 0x01 0x00
  : border-top
    0xA5 0x42
  : border-bottom
    0x42 0xA5
  : gate-left
    0x00 0x7A 0x4A
    #0x0A 0x7B 0x40
  : gate-right
    0x00 0x5E 0x52
    # 0x50 0xDE 0x02


#-- setup --#

  # map
  :alias map_xpos   v8
  :alias map_ypos   v9
  : tmp  0 0 0 0 0
  : map
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 # end row 1
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 # end row 2

  :const HTOP 10
  :const HMID  8
  :const HBOT  6

  # humans
  :alias humanx v6
  :alias humany v7
  : human-scared  0
  : human-map-pos 0 0

  :const UP 1
  :const DN 2
  :const LF 3
  :const RT 4

  # ghost
  :alias ghostx     va
  :alias ghosty     vb
  :alias ghostframe vc
  :alias ghostpos   vd

  :const HI  0
  :const LO 10


#-- ghost --#

: idletimer
  0

: make-ghost
  ghostx     := 12 # starting x position
  ghosty     :=  4 # starting y position
  ghostframe :=  0 # starting frame
  ghostpos   := HI # bounce direction
;

: draw-ghost
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10
;

: move-ghost
  :alias newx     v1
  :alias newy     v2
  :alias newframe v3

  newx := ghostx
  newy := ghosty

  :alias input v0
  input := 7
  if input key then newx += -2
  input := 9
  if input key then newx +=  2
  input := 5
  if input key then newy += -1
  input := 8
  if input key then newy +=  1

  # return early and don't change anything if no
  # direction keys are being pressed
  v0 := 0
  if newx != ghostx then v0 := 1
  if newy != ghosty then v0 := 1
  if v0 == 0 then return

  # boundary checking y
  # boundaries are only applied if on the edge of the map
  v0 := 1
  if map_ypos !=  0 then v0   := 0
  if newy     !=  1 then v0   := 0
  if v0       ==  1 then newy := 2
  v0 := 1
  if map_ypos != 16 then v0   := 0
  if newy     != 21 then v0   := 0
  if v0       ==  1 then newy := 20

  # boundary checking x
  # boundaries are only applied if on the edge of the map
  v0 := 1
  if map_xpos !=  0 then v0   := 0
  if newx     !=  0 then v0   := 0
  if v0       ==  1 then newx := 2
  v0 := 1
  if map_xpos !=  8 then v0   := 0
  if newx     != 58 then v0   := 0
  if v0       ==  1 then newx := 56

  # update frame offset so ghost turns
  newframe := 0
  if newx > ghostx then newframe := 20
  if newx < ghostx then newframe := 40
  if newy < ghosty then newframe := 60
  newframe += ghostpos

  # erase old ghost position
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10

  # draw new ghost position
  i := ghost
  i += newframe
  sprite newx newy 10

  # update ghost values
  # (do this here so there is minimal flicker)
  ghostx     := newx
  ghosty     := newy
  ghostframe := newframe
;

: bounce-ghost
  :alias pos   v1
  :alias frame v2

  pos   := ghostpos
  frame := ghostframe

  if pos == HI then ghostframe +=  10
  if pos == HI then ghostpos   :=  LO
  if pos == LO then ghostframe += -10
  if pos == LO then ghostpos   :=  HI

  # erase the ghost on the previous frame
  i := ghost
  i += frame
  sprite ghostx ghosty 10

  # draw the ghost in the new position
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10
;

: haunt
  # remove current ghost
  i := ghost
  i += ghostframe
  sprite ghostx ghosty 10

  # glitch the ghost for 6 frames
  :alias hauntoffset v1
  hauntoffset := 160
  i := ghost
  loop
    i += hauntoffset
    sprite ghostx ghosty 10

    hauntoffset += 10
    if hauntoffset != 60 then
  again

  clear
  draw-background
  draw-ghost

  # don't scare the human if they're not on this screen
  :alias h_map_xpos v0
  :alias h_map_ypos v1
  i := human-map-pos
  load v1
  if map_xpos != h_map_xpos then return
  if map_ypos != h_map_ypos then return

  # scare them!
  calculate-scare-direction
  :alias scared v5
  scared := v0
  save-human-scared

  draw-human
;

: calculate-scare-direction
  :alias xdir v0
  :alias ydir v1

  # calculate the total distance between the ghost and the
  # human horizontally and the direction
  :alias ghost_cx v2
  :alias human_cx v3
  :alias xmag     v4

  ghost_cx := ghostx
  ghost_cx += 3
  human_cx := humanx
  human_cx += 2

  xdir := 0
  # ghost and human are at the same x position
  if ghost_cx == human_cx then xdir := 0
  if ghost_cx == human_cx then xmag := 0
  # ghost is the to the right of the human
  if ghost_cx >  human_cx then xdir := LF
  if ghost_cx >  human_cx then xmag := ghost_cx
  if ghost_cx >  human_cx then xmag -= human_cx
  # x is negative if ghost is left
  if ghost_cx <  human_cx then xdir := RT
  if ghost_cx <  human_cx then xmag := human_cx
  if ghost_cx <  human_cx then xmag -= ghost_cx


  # calculate the total distance between the ghost and the
  # human horizontally and the direction
  :alias ghost_cy v2
  :alias human_cy v3
  :alias ymag     v5

  ghost_cy := ghosty
  ghost_cy += 4
  human_cy := humany
  human_cy += 3

  ydir := 0 # direction to move vertically
  if ghost_cy == human_cy then ydir := 0
  if ghost_cy == human_cy then ymag := 0
  # y is positive if ghost is below
  if ghost_cy >  human_cy then ydir := UP
  if ghost_cy >  human_cy then ymag := ghost_cy
  if ghost_cy >  human_cy then ymag -= human_cy
  # y is negative if ghost is above
  if ghost_cy <  human_cy then ydir := DN
  if ghost_cy <  human_cy then ymag := human_cy
  if ghost_cy <  human_cy then ymag -= ghost_cy

  :alias scareto v2
  scareto := 0
  if ymag >= xmag then scareto := ydir
  if ymag <  xmag then scareto := xdir

  # if both xmag and ymag are 0, then the ghost is on top
  # of the human and it should jsut run in a random direction
  v0 := scareto
  if v0 == 0 then scareto := random 0b11
  if v0 == 0 then scareto += 1

  # return scareto direction in v0
  v0 := scareto
;


#-- human --#

: make-human
  humanx := 31
  humany := 14

  v0 := 0
  i  := human-scared
  save v0

  v0 := 0
  v1 := 0
  i  := human-map-pos
  save v1
;

# saves the value in 'scared' to human-scared
# -> an alias for scared must be set
: save-human-scared
  ve := v0
  v0 := scared
  i  := human-scared
  save v0

  v0 := ve
;

# loads the value for human-scared into 'scared'
# -> an alias for scared must be set
: load-human-scared
  ve := v0
  i  := human-scared
  load v0

  scared := v0
  v0     := ve
;

: draw-human
  # don't draw human if they aren't on the current screen
  i := human-map-pos
  load v1
  if map_xpos != v0 then return
  if map_ypos != v1 then return

  i := human
  sprite humanx humany 7

  :alias scared v5
  load-human-scared
  if scared != 0 then run-human-run
;

: run-human-run
  :alias human_nx v1
  :alias human_ny v2
  :alias scared   v5
  load-human-scared

  loop
    human_nx := humanx
    human_ny := humany
    if scared == UP then human_ny += -1
    if scared == DN then human_ny +=  1
    if scared == LF then human_nx += -1
    if scared == RT then human_nx +=  1

    i := human
    sprite humanx   humany   7 # erase current human
    sprite human_nx human_ny 7 # draw new position

    v4 := vf
    if v4 == 0 then humanx := human_nx
    if v4 == 0 then humany := human_ny
    if v4 == 1 then check-grave-collision
               if v0 == 10 then return
    if v4 == 1 then human-turn

    # check to see if they're at the edge of the screen
    v0 := 0
    if humanx ==  0 then v0 := 1
    if humanx == 61 then v0 := 1
    if humany ==  0 then v0 := 1
    if humany == 25 then v0 := 1
    if v0 == 0 then
  again

  # "run off-screen"
  sprite humanx humany 7

  # update global map coordinates
  i := human-map-pos
  load v1
  if humanx ==  0 then v0 +=  -8
  if humanx == 61 then v0 +=   8
  if humany ==  0 then v1 += -16
  if humany == 25 then v1 +=  16
  i := human-map-pos
  save v1

  # set the new screen position
  v0 := random 0b110000
  v0 += 16
  if v0 == 64 then v0 := 32 # don't spawn to the far left
  humanx := v0

  v0 := random 0b1111
  v0 += 4
  humany := v0

  # calm down
  scared := 0
  save-human-scared
;

: human-turn
  :alias human_nx v1
  :alias human_ny v2

  v3 := random 0b1
  v3 += 3          # left or right
  v4 := random 0b1
  v4 += 1          # up or down

  :alias scared v5
  load-human-scared
  v0 := scared
  if v0 == UP then scared := v3
  if v0 == LF then scared := v4
  if v0 == DN then scared := v3
  if v0 == RT then scared := v4
  save-human-scared

  i := human
  sprite human_nx human_ny 7 # erase collision
  sprite humanx   humany   7 # draw in old position
;

: reset-human
  make-human
  clear
  draw-background
  draw-ghost
  draw-human
;


#-- background --#

# graves
: grave-table
  i := grave0      return
  i := grave1      return
  i := grave2      return
  i := grave3      return
  i := graveopen   return
  i := graveclosed return
;

: select-grave
  jump0 grave-table
;

: draw-grave
  :alias gravex v2
  :alias gravey v3

  i := map
  i += v1
  i += map_xpos
  i += map_ypos
  load v0

  # shift left because grave-table lines are 4 bytes each
  v0 <<= v0
  v0 <<= v0
  select-grave
  sprite gravex gravey 10
;

: make-background
  :alias j       v1
  :alias k       v2
  :alias openpos v3

  j := 0
  loop
    # don't make an opne grave on the first map screen
    if j != 0 then openpos := random 0b111
    if j == 0 then openpos := -1

    # inner loop is to create each screen
    # each screen (except for the generation screen) should
    # have exactly one open grave
    k := 0
    loop
      # choose a random grave 0-3
      v0 := random 0b11
      if k == openpos then v0 := 4

      i  := map
      i  += j
      i  += k
      save v0

      k += 1
      if k != 8 then
    again

    j += 8
    if j != 32 then
  again
;

: draw-background
  :alias j      v1
  :alias gravex v2
  :alias gravey v3

  gravey := HTOP
  if map_ypos == 16 then gravey := HBOT
  gravex := 7

  if map_xpos ==  0 then draw-border-left
  if map_xpos ==  8 then draw-border-right
  if map_ypos ==  0 then draw-border-top
  if map_ypos == 16 then draw-border-bottom

  j := 0
  loop
    draw-grave

    gravex += 16
    if j == 3 then gravey += 11

    j +=  1
    if j != 8 then
  again
;

# borders
: draw-border-left
  v0 := 1
  i  := border-left
  loop
    v1 := 0
    sprite v1 v0 15

    v0 += 15
    if v0 != 31 then
  again
;

: draw-border-right
  v0 := 1
  i  := border-right
  loop
    v1 := 56
    sprite v1 v0 15

    v0 += 15
    if v0 != 31 then
  again
;

: draw-border-top
  v0 := 3
  i  := border-top
  loop
    v1 := 0
    sprite v0 v1 2

    v0 += 10
    if v0 != 63 then
  again

  if map_xpos == 0 then draw-gate
;

: draw-border-bottom
  v0 := 3
  i  := border-bottom
  loop
    v1 := 30
    sprite v0 v1 2

    v0 += 10
    if v0 != 63 then
  again
;

: draw-gate
  v0 := 24
  v1 := 0

  i := gate-left
  sprite v0 v1 3
  v0 += 8
  i := gate-right
  sprite v0 v1 3
;

: new-screen-right
  map_xpos   +=  8
  ghostx     :=  0
  ghostframe := 20
  ghostpos   := HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: new-screen-left
  map_xpos   += -8
  ghostx     := 58
  ghostframe := 40
  ghostpos   := HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: new-screen-up
  map_ypos   += -16
  ghosty     :=  22
  ghostframe :=  60
  ghostpos   :=  HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: new-screen-down
  map_ypos   += 16
  ghosty     :=  0
  ghostframe :=  0
  ghostpos   := HI
  clear
  draw-background
  draw-human
  draw-ghost
;

: check-grave-collision
  :alias human_nx v1
  :alias human_ny v2
  :alias gravepos v3

  if human_nx ==  1 then jump no-collision # left border
  if human_nx == 62 then jump no-collision # right border
  if human_ny ==  1 then jump no-collision # top border
  if human_ny ==  2 then jump no-collision # top gate
  # we cannot check lower y border collision because the
  # person could have hit an open grave running horizontally

  # check for x-collision with graves
  gravepos := -1

  # grave 0 (x = 7)
  v0 := 1
  if human_nx <  5 then v0 := 0
  if human_nx > 10 then v0 := 0
  if v0 == 1 then gravepos := 0

  # grave 1 (x = 23)
  v0 := 1
  if human_nx < 21 then v0 := 0
  if human_nx > 26 then v0 := 0
  if v0 == 1 then gravepos := 1

  # grave 2 (x = 39)
  v0 := 1
  if human_nx < 37 then v0 := 0
  if human_nx > 42 then v0 := 0
  if v0 == 1 then gravepos := 2

  # grave 3 (x = 55)
  v0 := 1
  if human_nx < 53 then v0 := 0
  if human_nx > 58 then v0 := 0
  if v0 == 1 then gravepos := 3

  # no horizontal collision with any grave
  if gravepos == -1 then jump no-collision

  # check for y-pos to determine row
  v0 := HTOP
  if map_ypos == 16 then v0 := HBOT
  v0 += 5
  if human_ny >  v0 then gravepos += 4

  # update gravepos to be absolute for the entre map
  gravepos += map_xpos
  gravepos += map_ypos

  i  := map
  i  += gravepos
  load v0

  if v0 ==  4 then bury-human
  if v0 == 10 then return

  # use v0 as a return flag
  # -> 0 means the human did not hit an open grave
  : no-collision
    v0 := 0
;

: bury-human
  :alias gravepos v3

  v0 := 5
  i  := map
  i  += gravepos
  save v0

  clear
  reset-human

  # use v0 as a return flag for check-grave-collision
  # -> 10 means the human hit an open grave
  v0 := 10
;


#-- main --#

: main
  map_xpos := 0
  map_ypos := 0
  make-ghost
  draw-ghost

  make-human
  draw-human

  make-background
  draw-background

  loop
    move-ghost

    v0 := 6
    if v0 key then haunt

    v0 := 1
    if v0 key then reset-human

    # wrap around effect
    if ghostx == 60 then new-screen-right
    if ghostx == -2 then new-screen-left
    if ghosty == -1 then new-screen-up
    if ghosty == 23 then new-screen-down

    # idle the ghost
    v1 := 20
    i  := idletimer
    load v0
    v0 += v1
    v2 := vf
    i  := idletimer
    save v0
    if v2 == 1 then bounce-ghost
  again

